{"version":3,"sources":["store/MusicPlayerContext.js","store/useMusicPlayer.js","components/Artist.js","components/Tracks.js","components/OperaArtist.js","components/PopArtist.js","index.js","App.js"],"names":["MusicPlayerContext","React","createContext","useMusicPlayer","useContext","state","setState","togglePlay","isPlaying","audioPlayer","pause","play","playTrack","trackName","currentTrackName","Audio","reset","Artist","artist","images","name","followers","genres","total","join","src","url","alt","style","width","height","borderRadius","objectFit","Tracks","tracks","map","track","id","album","key","className","preview_url","onClick","trackIcon","OperaArtist","useState","artistQuery","setArtistQuery","setArtist","setTracks","fetchTopTracks","artistId","a","async","fetch","response","json","data","console","log","useEffect","artists","items","fetchArtist","onChange","event","target","value","PopArtist","App1","props","Provider","children","to","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46ee75d3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst MusicPlayerContext = React.createContext([{}, () => {}]);\r\n\r\nconst MusicPlayerProvider = props => {\r\n  const [state, setState] = useState({\r\n    audioPlayer: new Audio(),\r\n    currentTrackName: null,\r\n    isPlaying: false\r\n  });\r\n\r\n  return (\r\n    <MusicPlayerContext.Provider value={[state, setState]}>\r\n      {props.children}\r\n    </MusicPlayerContext.Provider>\r\n  );\r\n};\r\n\r\nexport { MusicPlayerContext, MusicPlayerProvider };\r\n","// https://upmostly.com/tutorials/how-to-use-the-usecontext-hook-in-react\r\n\r\nimport { useContext } from 'react';\r\nimport { MusicPlayerContext } from './MusicPlayerContext';\r\n\r\nconst useMusicPlayer = () => {\r\n  const [state, setState] = useContext(MusicPlayerContext);\r\n\r\n  function playTrack(trackName) {\r\n    if (trackName === state.currentTrackName) {\r\n      togglePlay();\r\n    } else {\r\n      state.audioPlayer.pause();\r\n      state.audioPlayer = new Audio(trackName);\r\n      state.audioPlayer.play();\r\n      setState(state => ({\r\n        ...state,\r\n        currentTrackName: trackName,\r\n        isPlaying: true\r\n      }));\r\n    }\r\n  }\r\n\r\n  function togglePlay() {\r\n    if (state.isPlaying) {\r\n      state.audioPlayer.pause();\r\n    } else {\r\n      state.audioPlayer.play();\r\n    }\r\n    setState(state => ({ ...state, isPlaying: !state.isPlaying }));\r\n  }\r\n\r\n  function reset() {\r\n    if (state.isPlaying) {\r\n      state.audioPlayer.pause();\r\n    }\r\n\r\n    state.audioPlayer = new Audio();\r\n    state.currentTrackName = null;\r\n    state.isPlaying = false;\r\n  }\r\n\r\n  return {\r\n    playTrack,\r\n    togglePlay,\r\n    currentTrackName: state.currentTrackName,\r\n    isPlaying: state.isPlaying,\r\n    reset\r\n  };\r\n};\r\n\r\nexport default useMusicPlayer;\r\n","import React from 'react';\r\n\r\nconst Artist = ({ artist }) => {\r\n  if (!artist) return null;\r\n\r\n  const { images, name, followers, genres } = artist;\r\n\r\n  return (\r\n    <div>\r\n      <h3>{name}</h3>\r\n      <p>{followers.total} followers</p>\r\n      <p>{genres.join(', ')}</p>\r\n      <img\r\n        src={images[0] && images[0].url}\r\n        alt=\"artist-profile\"\r\n        style={{\r\n          width: 350,\r\n          height: 350,\r\n          borderRadius: '50%',\r\n          objectFit: 'cover'\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Artist;\r\n","import React from 'react';\r\nimport useMusicPlayer from '../store/useMusicPlayer';\r\nimport './artist.css';\r\n\r\nfunction Tracks({ tracks }) {\r\n  const { currentTrackName, playTrack, isPlaying } = useMusicPlayer();\r\n\r\n  const trackIcon = track => {\r\n    if (!track.preview_url) {\r\n      return <span>N/A</span>;\r\n    }\r\n\r\n    if (currentTrackName === track.preview_url && isPlaying) {\r\n      return <span onClick={() => playTrack(track.preview_url)}>| |</span>;\r\n    } else {\r\n      return <span onClick={() => playTrack(track.preview_url)}>&#9654;</span>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {tracks.map(track => {\r\n        const { id, name, album } = track;\r\n\r\n        return (\r\n          <div key={id} className=\"track\">\r\n            <img\r\n              src={album.images[0].url}\r\n              alt=\"track-image\"\r\n              className=\"track-image\"\r\n            />\r\n            <p className=\"track-text\">{name}</p>\r\n            <p className=\"track-icon\">{trackIcon(track)}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tracks;\r\n","import React, { useState, useEffect } from 'react';\r\nimport useMusicPlayer from '../store/useMusicPlayer';\r\n\r\nimport Artist from './Artist';\r\nimport Tracks from './Tracks';\r\n\r\nfunction OperaArtist() {\r\n  const { reset } = useMusicPlayer();\r\n\r\n  const [artistQuery, setArtistQuery] = useState('Maria Callas');\r\n  const [artist, setArtist] = useState(null);\r\n  const [tracks, setTracks] = useState([]);\r\n\r\n  const fetchTopTracks = async artistId => {\r\n    // console.log(artistId);\r\n\r\n    // Fetch the artist's top tracks response\r\n    // https://spotify-api-wrapper.appspot.com/artist/0bjdfjE8XbLa2Odstu6E1E/top-tracks\r\n    const response = await fetch(\r\n      `https://spotify-api-wrapper.appspot.com/artist/${artistId}/top-tracks`\r\n    );\r\n\r\n    // Get data\r\n    const data = await response.json();\r\n    console.log(data); //  in browser\r\n\r\n    setTracks(data.tracks);\r\n  };\r\n\r\n  const fetchArtist = async () => {\r\n    // Get response\r\n    //fetch(`https://spotify-api-wrapper.appspot.com/artist/Maria Callas`)\r\n    const response = await fetch(\r\n      `https://spotify-api-wrapper.appspot.com/artist/${artistQuery}`\r\n    );\r\n\r\n    // Get data\r\n    const data = await response.json();\r\n    console.log(data); //  in browser\r\n\r\n    const artist = data.artists.items[0];\r\n    setArtist(artist);\r\n\r\n    fetchTopTracks(artist.id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    reset();\r\n    fetchArtist();\r\n  }, [artistQuery]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Select Artist</h1>\r\n      <div className=\"form\">\r\n        <select\r\n          id=\"selectedArtist\"\r\n          onChange={event => setArtistQuery(event.target.value)}\r\n          value={artistQuery}\r\n        >\r\n          <option value=\"Maria Callas\">Maria Callas</option>\r\n          <option value=\"Luciano Pavarotti\">Luciano Pavarotti</option>\r\n          <option value=\"Joan Sutherland\">Joan Sutherland</option>\r\n          <option value=\"Renata Tebaldi\">Renata Tebaldi</option>\r\n          <option value=\"Montserrat Caballe\">Montserrat Caballé</option>\r\n        </select>\r\n      </div>\r\n\r\n      <Artist artist={artist} />\r\n      <Tracks tracks={tracks} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OperaArtist;\r\n","import React, { useState, useEffect } from 'react';\r\nimport useMusicPlayer from '../store/useMusicPlayer';\r\n\r\nimport Artist from './Artist';\r\nimport Tracks from './Tracks';\r\n\r\nfunction PopArtist() {\r\n  const { reset } = useMusicPlayer();\r\n  const [artistQuery, setArtistQuery] = useState('Whitney Houston');\r\n  const [artist, setArtist] = useState(null);\r\n  const [tracks, setTracks] = useState([]);\r\n\r\n  const fetchTopTracks = async artistId => {\r\n    // console.log(artistId);\r\n\r\n    // Fetch the artist's top tracks response\r\n    // https://spotify-api-wrapper.appspot.com/artist/0bjdfjE8XbLa2Odstu6E1E/top-tracks\r\n    const response = await fetch(\r\n      `https://spotify-api-wrapper.appspot.com/artist/${artistId}/top-tracks`\r\n    );\r\n\r\n    // Get data\r\n    const data = await response.json();\r\n    console.log(data); //  in browser\r\n\r\n    setTracks(data.tracks);\r\n  };\r\n\r\n  const fetchArtist = async () => {\r\n    // Get response\r\n    //fetch(`https://spotify-api-wrapper.appspot.com/artist/Maria Callas`)\r\n    const response = await fetch(\r\n      `https://spotify-api-wrapper.appspot.com/artist/${artistQuery}`\r\n    );\r\n\r\n    // Get data\r\n    const data = await response.json();\r\n    console.log(data); //  in browser\r\n\r\n    const artist = data.artists.items[0];\r\n    setArtist(artist);\r\n\r\n    fetchTopTracks(artist.id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    reset();\r\n    fetchArtist();\r\n  }, [artistQuery]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Select Artist</h1>\r\n      <div className=\"form\">\r\n        <select\r\n          id=\"selectedArtist\"\r\n          onChange={event => setArtistQuery(event.target.value)}\r\n          value={artistQuery}\r\n        >\r\n          <option value=\"Whitney Houston\">Whitney Houston</option>\r\n          <option value=\"Michael Jackson\">Michael Jackson</option>\r\n\r\n          <option value=\"Johnny Cash\">Johnny Cash</option>\r\n          <option value=\"Loretta Lynn\">Loretta Lynn</option>\r\n          <option value=\"Randy Travis\">Randy Travis</option>\r\n\r\n          <option value=\"Lady Gaga\">Lady Gaga</option>\r\n        </select>\r\n      </div>\r\n\r\n      <Artist artist={artist} />\r\n      <Tracks tracks={tracks} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopArtist;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { MusicPlayerProvider } from './store/MusicPlayerContext';\r\nconst App1 = (\r\n  <MusicPlayerProvider>\r\n    <div className=\"container\">\r\n      <App />\r\n    </div>\r\n  </MusicPlayerProvider>\r\n);\r\n\r\nReactDOM.render(App1, document.getElementById('root'));\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport OperaArtist from './components/OperaArtist';\r\nimport PopArtist from './components/PopArtist';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/opera\">Opera</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/pop\">Pop</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/pop\">\r\n            <PopArtist />\r\n          </Route>\r\n          <Route path=\"/opera\">\r\n            <OperaArtist />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <OperaArtist />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n"],"sourceRoot":""}